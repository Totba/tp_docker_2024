version: '3.8'
services:
  api:
    build: ./api-service
    ports:
      - "3000:3000"
    networks:
      - backend
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL_FILE: /run/secrets/database_url  # Utiliser le secret pour la connexion Ã  la DB
    secrets:
      - database_url

  db:
    image: postgres:14
    secrets:
      - postgres_user
      - postgres_password
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: myapp
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    networks:
      - backend

networks:
  backend:

volumes:
  db-data:

secrets:
  postgres_user:
    file: ./secrets/postgres_user
  postgres_password:
    file: ./secrets/postgres_password
  database_url:
    file: ./secrets/database_url
